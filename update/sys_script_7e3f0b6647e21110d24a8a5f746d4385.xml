<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>FirstServerSide</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	var util = new NeedItUtil();
	var check = util.IsPast(current.u_glide_date_time_1);
	var rightNow = new GlideDateTime();
	var when_needed = new GlideDateTime(current.u_glide_date_time_1);
	if(check == true){
		gs.addErrorMessage("when needed " + when_needed + " cannot be before current time " + rightNow);
		current.setAbortAction(true);
	}
	gs.addInfoMessage("when_needed.getLocalDate() " + when_needed.getLocalDate() + " rightNow.getLocalDate() " + rightNow.getLocalDate());
	
	if((when_needed.getLocalDate().compareTo(rightNow.getLocalDate())) === 0){
		gs.error("Cannot be delivered today");
		gs.addErrorMessage("Cannot be delivered today");
		current.setAbortAction(true);
	}
	
	var bol = validateEmailAddress(current.u_requested_for_email);
	gs.info("value of bol is " + bol);
	//bol = true ;
	if(bol == false){
		gs.addErrorMessage(" Changed to Invalid email address " + bol);
		current.setAbortAction(true);
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-10-18 10:37:41</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7e3f0b6647e21110d24a8a5f746d4385</sys_id>
        <sys_name>FirstServerSide</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_7e3f0b6647e21110d24a8a5f746d4385</sys_update_name>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=7e3f0b6647e21110d24a8a5f746d4385"/>
</record_update>
